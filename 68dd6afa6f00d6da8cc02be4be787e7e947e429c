Revision: 68dd6afa6f00d6da8cc02be4be787e7e947e429c
Patch-set: 1
File: core/soong.mk

16
Tue Mar 22 22:23:36 2016 +0000
Author: Dan Willemsen <1074628@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7c21d2e1_106076af
Bytes: 514
My only problem with this change is that we aren't regenerating out/soong/.soong.bootstrap for any affected users, since we only run this target if out/soong/soong doesn't exist, which it will.

CleanSpec.mk won't help, since we don't get that far.

I could change this rule to make $(SOONG_OUT_DIR)/.soong.bootstrap depend on bootstrap.bash, so that anytime bootstrap.bash is updated, then we re-run bootstrap, but that's not strictly necessary. And ideally, we'd want to re-run it any time SOONG_OUT_DIR changes.

16
Tue Mar 22 23:31:38 2016 +0000
Author: Ying Wang <1003981@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 7c21d2e1_106076af
UUID: 7c21d2e1_bd598261
Bytes: 348
I don't know anyone would encounter such issue in reality.
If we really care we can use a variable dependency file like:
soong_out_dir_dep := $(OUT_DIR)/$(subst /,-,$(SOONG_OUT_DIR)).soong_out_dir_dep
$(soong_out_dir_dep) :
  $(hide) mkdir -p $(dir $@) && rm -f $(dir $@)*.soong_out_dir_dep && touch $@
$(SOONG): $(soong_out_dir_dep)
  <the recipe>

16
Wed Mar 23 02:38:09 2016 +0000
Author: Dan Willemsen <1074628@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 7c21d2e1_bd598261
UUID: 7c21d2e1_3def5268
Bytes: 1060
We can't add file dependencies to SOONG right now, since we're creating a symlink, and make will read the timestamp of build/soong/soong.bash instead of when we created the symlink. So to add a dependency on bootstrap.bash, I'm moving the target here to be $(SOONG_OUT_DIR)/.soong.bootstrap, which is a normal file created by bootstrap.bash.

Colin gave the suggestion that we should just compare the current SOONG_OUT_DIR against the ones stored in the $(SOONG_OUT_DIR)/.soong.bootstrap file, and rerun bootstrap if necessary. I'm doing that now.

It turns out that even if the $(SOONG_OUT_DIR) doesn't change, if you do:

  mv out ~/out
  ln -s ~/out out

it would fail because out/soong/soong would be a dangling symlink (hopefully, but could be pointing to a different tree), and we aren't checking that anymore with a make target. So we also need to validate the relative path reversing that bootstrap.bash is doing. In order to do that here, I'm refactoring the (duplicated) bootstrap path code into a python script that we can call from here (and test).

