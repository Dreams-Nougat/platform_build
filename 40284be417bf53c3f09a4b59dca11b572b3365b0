Revision: 40284be417bf53c3f09a4b59dca11b572b3365b0
Patch-set: 1
File: envsetup.sh

791
Wed Jan 02 23:23:25 2013 +0000
Author: JP Abgrall <1005480@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: NgGKT1lk
Bytes: 386
Don't test and tweak commands in this function.
Have something like

      gdbwrapper -x "$OUT..."
      ...
   }
   function gdbwrapper() {
       $ANDROID_TOOLCHAIN/$GDB "$@"
   }

This will allow people to setup the env, and override the gdbwrapper at will for any gdb-style wrappers.

   . build/envsetup.sh
   function gdbwrapper() { ddd --debugger $ANDROID_TOOLCHAIN/$GDB "$@" ; }

791
Wed Feb 06 16:45:00 2013 +0000
Author: John Michelau <1005146@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: NgGKT1lk
UUID: PhESY4h8
Bytes: 208
Is your preference is that 'ddd' support isn't built-in, and instead needs to be defined by the user after sourcing the build environment?  Or do you only object to the way that I accomplished building it in?

791
Fri Mar 08 18:28:38 2013 +0000
Author: JP Abgrall <1005480@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: PhESY4h8
UUID: RRDLzGC4
Bytes: 258
Assume that there are 2000 different clients: your method fails to scale, and is unusable for the 1998 more obscure clients.

The solution I'm suggesting allows the 1998 other clients to benefit from only changing one function in their env after envsetup.sh.

791
Fri Mar 08 19:07:00 2013 +0000
Author: John Michelau <1005146@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: RRDLzGC4
UUID: RTHYPUKk
Bytes: 300
Understood and agreed.  The patch set 2 that I pushed this morning solves the scaling issue, but leaves in shortcuts for the most common debuggers (gdb and ddd).  I'm not sure it will work with the command line interfaces of the more obscure tools, so I'll try a few and tweak the patch if necessary.

