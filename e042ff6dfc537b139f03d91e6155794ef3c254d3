Revision: e042ff6dfc537b139f03d91e6155794ef3c254d3
Patch-set: 1
File: target/product/embedded.mk

99:0-99:5
Mon Jul 13 17:57:20 2015 +0000
Author: Ying Wang <1003981@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 58d23ae8_a1192881
Bytes: 68
You don't need this, if we rebuild the linker with name linker_asan.

99:0-99:5
Mon Jul 13 18:00:30 2015 +0000
Author: Evgenii Stepanov <1005967@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 58d23ae8_a1192881
UUID: 78753eb8_c2e79c21
Bytes: 194
Without this, nothing depends on linker_asan in the first build.
And we don't build the linker in the second build at all, because it should not (and can not) be build with ASan instrumentation.

99:0-99:5
Mon Jul 13 18:07:11 2015 +0000
Author: Ying Wang <1003981@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 78753eb8_c2e79c21
UUID: 18dc42fc_aa56e39f
Bytes: 283
Hmm, I forgot about the fact linker is a static executable.
On the other hand, is it possible to make this a runtime decision? e.g. passing an option when the linker is called? or make linker_asan a symlink of linker and in the code see  if the executable is called as "linker_asan"?

99:0-99:5
Mon Jul 13 18:10:14 2015 +0000
Author: Evgenii Stepanov <1005967@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 18dc42fc_aa56e39f
UUID: 987af2a8_465ab4c6
Bytes: 37
OK, I'll try this approach (symlink).

99:0-99:5
Tue Jul 14 18:21:29 2015 +0000
Author: Evgenii Stepanov <1005967@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 987af2a8_465ab4c6
UUID: 187d22ed_2e7f33d7
Bytes: 68
Removed.
Oh, maybe I should re-add this block with $SANITIZE_TARGET?

