Revision: d0d8cef91b18005d9c52e9d622caf47e29a827fe
Patch-set: 1
File: tools/fs_config/Android.mk

36:0-36:98
Thu Apr 02 23:54:10 2015 +0000
Author: Ying Wang <1003981@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 63de6a5c_39c1829c
Bytes: 306
We should allow the device define a custom value in its BoardConfig.mk;
Is fs_config_dirs and/or fs_config_files required for every build? If so we may need to give a default android_filesystem_config.h.
Otherwise enclose the whole thing with conditional:
ifdef TARGET_ANDROID_FILESYSTEM_CONFIG_H
...
endif

36:0-36:98
Fri Apr 03 00:39:52 2015 +0000
Author: Mark Salyzyn <1032276@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 63de6a5c_39c1829c
UUID: e3bdfae6_286ec0ac
Bytes: 232
There is a problem with providing an override to the name, one can not do:

 #include ANDROID_FILESYSTEM_CONFIG

in the source file without adding an additional 'manufacturing' step to edit/change it. I guess I can add that step ...

36:0-36:98
Fri Apr 03 00:56:30 2015 +0000
Author: Ying Wang <1003981@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e3bdfae6_286ec0ac
UUID: 23c4727c_70e943ad
Bytes: 224
We can ask TARGET_ANDROID_FILESYSTEM_CONFIG_H to have a fixed file name, but not the path. I think that's reasonable.


(Or you can use:
LOCAL_CFLAGS += -include $(TARGET_ANDROID_FILESYSTEM_CONFIG_H), but it's not preferred.

46:0-46:70
Thu Apr 02 23:54:10 2015 +0000
Author: Ying Wang <1003981@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 23c4727c_768ca0cb
Bytes: 115
You don't need this. The build system will establish the dependency on all the header files included by the source.

47:16-47:42
Thu Apr 02 23:54:10 2015 +0000
Author: Ying Wang <1003981@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e3bdfae6_92897bbd
Bytes: 56
I'd use:
-I $(dir $(TARGET_ANDROID_FILESYSTEM_CONFIG_H))

48:16-48:80
Thu Apr 02 23:54:10 2015 +0000
Author: Ying Wang <1003981@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 63de6a5c_9951966b
Bytes: 177
I found this is hard to read. I'd change it to:
-DANDROID_FILESYSTEM_CONFIG=\"$(TARGET_ANDROID_FILESYSTEM_CONFIG_H)\"

Do you really want to build the file path into the binary?

48:16-48:80
Fri Apr 03 00:39:52 2015 +0000
Author: Mark Salyzyn <1032276@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 63de6a5c_9951966b
UUID: e3bdfae6_08309c18
Bytes: 387
I do not need the path, it was meant to be informational (the tool could print out the full path of the file being included and processed), but I do need this to _not_ be defined if TARGET_ANDROID_FILESYSTEM_CONFIG_H does not exist so that the source procedes to a default.

Would you be more comfortable with $(patsubst) rather than the short-hand? I could do an ifneq ($(TARGET_...),)?

48:16-48:80
Fri Apr 03 00:56:30 2015 +0000
Author: Ying Wang <1003981@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e3bdfae6_08309c18
UUID: 63de6a5c_a05536dd
Bytes: 73
Yes, I got it after I read the c file.
Yes, you can use "ifneq ..." here.

51:0-51:0
Fri Apr 03 00:11:01 2015 +0000
Author: Ying Wang <1003981@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 23c4727c_e182284c
Bytes: 233
You can store the built executable to a vaiable here:
host_fs_config_bin := $(LOCAL_INSTALLED_MODULE)
Then you can use $(host_fs_config_bin) to replace "$(HOST_OUT_EXECUTABLES)/fs_config_generate_$(TARGET_DEVICE)" later in this file.

59:0-62:91
Thu Apr 02 23:54:10 2015 +0000
Author: Ying Wang <1003981@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 63de6a5c_3daccd9c
Bytes: 120
$(LOCAL_BUILT_MODULE) : $(HOST_OUT_EXECUTABLES)/fs_config_generate_$(TARGET_DEVICE)
   mkdir -p $(dir $@)
   $< -D -o $@

71:0-74:92
Thu Apr 02 23:54:10 2015 +0000
Author: Ying Wang <1003981@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e3bdfae6_f52541d7
Bytes: 120
$(LOCAL_BUILT_MODULE) : $(HOST_OUT_EXECUTABLES)/fs_config_generate_$(TARGET_DEVICE)
   mkdir -p $(dir $@)
   $< -F -o $@

File: tools/fs_config/fs_config_generate.c

22:18-22:45
Fri Apr 03 00:11:01 2015 +0000
Author: Ying Wang <1003981@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e3bdfae6_f582e19a
Bytes: 117
We may want to use a different file name for the device specific header file, to avoid conflict and reduce confusion.

22:18-22:45
Fri Apr 03 00:39:52 2015 +0000
Author: Mark Salyzyn <1032276@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e3bdfae6_f582e19a
UUID: 63de6a5c_a0f9b6c4
Bytes: 128
The following include has to become a 'manufacturing' step in order to use a device specific header file. I will look into that.

24:0-44:6
Thu Apr 02 23:54:10 2015 +0000
Author: Ying Wang <1003981@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 63de6a5c_fd67651f
Bytes: 187
I'd move the default value to a header file and use it if a device header file isn't provided. So that we can have all the above logic in the makefile and not pass the path to the c file.

24:0-44:6
Fri Apr 03 00:39:52 2015 +0000
Author: Mark Salyzyn <1032276@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 63de6a5c_fd67651f
UUID: 23c4727c_bced7737
Bytes: 199
The default has to be sensitive to NO_ANDROID_DEVICE_* being defined in the included file to signal one or the other structure missing. In essence, the default include file would then be lines 27-29.

