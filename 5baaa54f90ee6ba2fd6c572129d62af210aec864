Revision: 5baaa54f90ee6ba2fd6c572129d62af210aec864
Patch-set: 4
File: tools/releasetools/ota_from_target_files.py

1583
Thu Apr 09 20:03:24 2015 +0000
Author: Dan Albert <1043845@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 03868e96_d836e361
Bytes: 62
Closing twice? Maybe just wrap the whole block in try/finally.

1583
Fri Apr 10 18:39:35 2015 +0000
Author: Tao Bao <1056365@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 03868e96_d836e361
UUID: 636d8ab3_259fb0df
Bytes: 308
This is a weird format. It won't close twice actually, and it's not to handle the exception. There is an infinite loop from L1537 to L1581. In each iteration, it opens the zipfile. Before getting into another iteration, it needs to close the zipfile... I've moved L1583 inside the loop to make it less weird.

File: tools/releasetools/test_common.py

80
Thu Apr 09 20:03:24 2015 +0000
Author: Dan Albert <1043845@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e356daec_ef45a174
Bytes: 228
I'm not a fan of the copy/paste. Aren't these basically all the same test that just call a different function? If so, make the function to call be an argument to the inner most test and make all these just be wrappers around it.

80
Fri Apr 10 18:31:49 2015 +0000
Author: Tao Bao <1056365@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e356daec_ef45a174
UUID: 636d8ab3_e54cd853
Bytes: 245
i'm combining _test_ZipWriteStr_arcname() and _test_ZipWriteStr_zinfo(), but still leaving _Write() and _WriteStr() as separate ones. _Write() needs a tempfile, and also it checks the stat after writing. Keeping them separate seems more cleaner.

236:6-236:38
Fri Apr 10 18:31:49 2015 +0000
Author: Tao Bao <1056365@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e356daec_bd73c218
Bytes: 53
I'm merging this with ZipWriteStr_resets_ZIP64_LIMIT.

276
Thu Apr 09 20:03:24 2015 +0000
Author: Dan Albert <1043845@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e356daec_0f72e5e1
Bytes: 20
This got duplicated?

276
Fri Apr 10 18:31:49 2015 +0000
Author: Tao Bao <1056365@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e356daec_0f72e5e1
UUID: 636d8ab3_45cf4c5b
Bytes: 73
bad copy & paste :( pylint actually caught that but i missed the warning.

