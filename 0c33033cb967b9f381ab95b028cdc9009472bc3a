Revision: 0c33033cb967b9f381ab95b028cdc9009472bc3a
Patch-set: 1
File: envsetup.sh

989
Thu Nov 13 03:18:21 2014 +0000
Author: Ying Wang <1003981@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 9adacf31_dfdbbb9f
Bytes: 218
For tapas, we should get the device name from the build system:
 DEVICE=$(get_build_var TARGET_DEVICE)
You can test env variable TARGET_BUILD_APPS to see if it's tapas build, see the function tapas() in this same file.

989
Thu Nov 13 22:39:37 2014 +0000
Author: Dimitry Ivanov <1041673@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 9adacf31_dfdbbb9f
UUID: da9e076c_f45a563b
Bytes: 83
for tapas we copy exe file and linker(64)? from device to appropriate local folder.

1009
Thu Nov 13 03:18:21 2014 +0000
Author: Ying Wang <1003981@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 9adacf31_7fd62f85
Bytes: 84
This isn't correct. For tapas $DEVICE may be generic, generic_x86, generic_mips etc.

1009
Thu Nov 13 22:39:37 2014 +0000
Author: Dimitry Ivanov <1041673@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 9adacf31_7fd62f85
UUID: da9e076c_54c5e268
Bytes: 4
Done

1012:4-1012:8
Thu Nov 13 00:31:12 2014 +0000
Author: Primiano Tucci <1040443@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 1af89f89_312cc88c
Bytes: 270
This error will still be hit on a tapas build. A tapas build doesn't have the target/product/mako (or similar) folder at all, just product/generic.

I think you want the check above to be something like
if [[ ! -d "${SYMBOLS_DIR}" || ! -d "${TAPAS_SYMBOLS_DIR}" ]]; then

1012:4-1012:8
Thu Nov 13 00:42:27 2014 +0000
Author: Dimitry Ivanov <1041673@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 1af89f89_312cc88c
UUID: 7af19ba1_572ea6bb
Bytes: 219
not really - we need access to executable to run gdb and to detect lp64. old one needed it too.

So for tapas you will need symbols from the build server or adb pull app_process32/64 workaround but with different path..

1012:4-1012:8
Thu Nov 13 00:58:00 2014 +0000
Author: Primiano Tucci <1040443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 7af19ba1_572ea6bb
UUID: 3afba387_f286c039
Bytes: 165
I am pretty sure the old one was looking for app_process in the right place (I think it was looking into ANDROID_PRODUCT_OUT rather than hardcoding product/$DEVICE).

1012:4-1012:8
Thu Nov 13 01:01:36 2014 +0000
Author: Dimitry Ivanov <1041673@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3afba387_f286c039
UUID: 3afba387_f25d2036
Bytes: 288
It wasn't tapas do not build app_process, so there is no correct location for it.. on the other hand - if you download symbols for your device/build, it has app_process32/64 at the right place. so you wont need to do cp -r out/target/product/hammerhead/symbols out/target/product/generic/

1012:4-1012:8
Thu Nov 13 01:09:40 2014 +0000
Author: Primiano Tucci <1040443@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3afba387_f25d2036
UUID: 1af89f89_b418a667
Bytes: 396
To be honest it would be nice if could "just work" (TM) without doing hacks.
At this point the best solution, IMHO, seems to be:
if symbols_dir is not set, adb pull the exe from the device.
In most of the cases folks want to debug Java apps, nor native binaries, which means that the exe will be app_process32/64 and we don't care about the debug symbols for that, we just need to make gdb happy.

1012:4-1012:8
Thu Nov 13 01:14:43 2014 +0000
Author: Dimitry Ivanov <1041673@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 1af89f89_b418a667
UUID: 1af89f89_54fd027b
Bytes: 272
good idea, but sometimes symbol_dir is not set because my ANDROID_SERIAL is pointing to incorrect device (or I did not build symbols), we need somehow to detect if it is tapas user and doesn't care about app_process symbols or it is lunch user who cares (in most cases)...

1012:4-1012:8
Thu Nov 13 22:39:37 2014 +0000
Author: Dimitry Ivanov <1041673@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 1af89f89_54fd027b
UUID: da9e076c_74cae67b
Bytes: 4
Done

