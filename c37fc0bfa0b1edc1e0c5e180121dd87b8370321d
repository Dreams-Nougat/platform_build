Revision: c37fc0bfa0b1edc1e0c5e180121dd87b8370321d
Patch-set: 7
File: core/binary.mk

635:35-635:42
Wed Aug 19 14:24:59 2015 +0000
Author: Gilad Arnold <1076344@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a4fb1585_21ee2a2a
Bytes: 54
For clarity, this could just be 'proxies' (see below).

635:35-635:42
Wed Aug 19 17:19:56 2015 +0000
Author: Christopher Wiley <1057759@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: a4fb1585_21ee2a2a
UUID: 04806112_e90fcce8
Bytes: 121
I kind of like calling this directory include, because it clearly communicates that this is the root of the include path.

635:35-635:42
Wed Aug 19 17:36:46 2015 +0000
Author: Gilad Arnold <1076344@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 04806112_e90fcce8
UUID: 64591d73_9cf2f78e
Bytes: 92
But we don't do this for the adaptor headers, do we? I'm fine either way, just pointing out.

638
Wed Aug 19 14:24:59 2015 +0000
Author: Gilad Arnold <1076344@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e4aeed64_3419f204
Bytes: 166
We might want to append another directory to $(dbus_gen_dir) in this case to ensure there's no possible overlap between the two cases, e.g. $(dbus_gen_dir)/adaptors .

638
Wed Aug 19 17:19:56 2015 +0000
Author: Christopher Wiley <1057759@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e4aeed64_3419f204
UUID: 64591d73_dc4d8f94
Bytes: 115
Right now, a given target cannot generate both adaptors and proxies.  I don't see how we could end up with overlap.

638
Wed Aug 19 17:36:46 2015 +0000
Author: Gilad Arnold <1076344@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 64591d73_dc4d8f94
UUID: a4a8755c_509912fe
Bytes: 278
You are right and I keep forgetting that generated artifacts are scoped within their target's intermediates dir. That said, for the sake of clarity, I think the distinction between $(dbus_gen_dir)/proxies/... and $(dbus_gen_dir)/adaptors/... is useful. Again, just a preference.

639:16-639:61
Tue Aug 18 22:38:26 2015 +0000
Author: Ying Wang <1003981@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: a4a8755c_9f3b1d86
Bytes: 115
To use static pattern rule, I added the source path (relative to LOCAL_PATH) to the generated headers in this case.

639:16-639:61
Wed Aug 19 17:19:56 2015 +0000
Author: Christopher Wiley <1057759@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: a4a8755c_9f3b1d86
UUID: e4aeed64_b7596462
Bytes: 88
I wish I had thought of this, but hey, now I have a basic understanding of call/eval. :/

649
Wed Aug 19 14:24:59 2015 +0000
Author: Gilad Arnold <1076344@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: e4aeed64_9408e6b8
Bytes: 100
Is there a reason for the different spacing around ':' between variable assignment and dependencies?

649
Wed Aug 19 17:19:56 2015 +0000
Author: Christopher Wiley <1057759@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: e4aeed64_9408e6b8
UUID: c471e91c_2eac86f7
Bytes: 167
My rough reading of the file is that ": " is used for scoping the next statement to a set of targets.  " : " is used to express dependencies.  But that's just a guess.

649
Wed Aug 19 18:03:32 2015 +0000
Author: Ying Wang <1003981@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: c471e91c_2eac86f7
UUID: e4434d7f_b3f8b98a
Bytes: 55
Yes, that's the convention in the Android build system.

661:0-661:49
Tue Aug 18 22:38:26 2015 +0000
Author: Ying Wang <1003981@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: c471e91c_3f52f7b6
Bytes: 70
then added their dir to the include path here.
Does this work for you?

661:0-661:49
Wed Aug 19 14:24:59 2015 +0000
Author: Gilad Arnold <1076344@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: c471e91c_3f52f7b6
UUID: 243ac5f6_56dfa985
Bytes: 174
I think this would work (but curious what wiley says ;-) ).

We should probably add these to my_export_c_include_dirs as well, in case these get generated in a separate rule.

661:0-661:49
Wed Aug 19 17:19:56 2015 +0000
Author: Christopher Wiley <1057759@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 243ac5f6_56dfa985
UUID: c4a9e95f_fcc6dfad
Bytes: 671
I think I'd like to include the folder structure inside the repository as part of the header namespacing.  So if a project had sources dbus_bindings/example/org.chromium.Example.dbus.xml, they would write

#include <dbus_bindings/example/org.chromium.Example.h>

I think that this gives better hints to authors where the code is coming from than:

#include <org.chromium.Example.h>

In practice, most projects keep their binding definitions in a directory called dbus_bindings in the root of their project, so the include statement would look like:

#include <dbus_bindings/org.chromium.Buffet.Manager.h>

We should be able to massage the gyp files to match this pattern.

661:0-661:49
Wed Aug 19 17:36:46 2015 +0000
Author: Gilad Arnold <1076344@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: c4a9e95f_fcc6dfad
UUID: 04806112_891730d4
Bytes: 107
This makes sense to me. my_c_includes += $(dbus_header_dir) then? Do we need my_export_c_include_dirs, too?

661:0-661:49
Wed Aug 19 17:47:55 2015 +0000
Author: Christopher Wiley <1057759@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 04806112_891730d4
UUID: c4a9e95f_e7fc08a9
Bytes: 236
I suppose it can't hurt.  There exist patterns where we compile 95% of a daemon into a common library for the purposes of running unittests against it.  It would be a hassle to have to reason about hiding the headers for generated code.

661:0-661:49
Wed Aug 19 18:03:32 2015 +0000
Author: Ying Wang <1003981@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: c4a9e95f_e7fc08a9
UUID: c4a9e95f_07836412
Bytes: 25
sounds good. I'll update.

