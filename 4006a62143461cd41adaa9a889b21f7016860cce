Revision: 4006a62143461cd41adaa9a889b21f7016860cce
Patch-set: 3
File: core/definitions.mk

908
Wed Jul 24 22:59:26 2013 +0000
Author: Ying Wang <1003981@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 934d4312_cf918d9e
Bytes: 538
The build system doesn't like you to pass in a custom --proto_path: it must be $(TOP). The --proto_path option of protoc could affect the path of the output .pb.cc/.pb.h files, see http://code.google.com/apis/protocolbuffers/docs/reference/cpp-generated.html#invocation. If we allow the module to set different --proto_path, it will be very hard for the build system to figure out the correct path of the output .pb.cc/.pb.h. It's critical for the build system to know the exact locations of a c++ source file when the makefile is parsed.

908
Wed Jul 24 23:18:19 2013 +0000
Author: Ulas Kirazci <1020814@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 934d4312_cf918d9e
UUID: 934d4312_cfdf4d51
Bytes: 366
In your link it says that proto_path is completely overridden by cpp_out. See the second bullet point. So proto_path does not affect the output of .pb.* files.

--proto_path is equivalent to -I in gcc: it specifies the include directories to be search for relative includes. This is used when resolving the absolute path of an "import ..." statement in a proto file.

908
Thu Jul 25 00:30:04 2013 +0000
Author: Ying Wang <1003981@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 934d4312_cfdf4d51
UUID: 934d4312_2f97d13f
Bytes: 318
Yeah, but you can specify multiple --proto_path to protoc, protoc searches all the proto_paths to find the source files and construct the output path by replacing the proto_path with the --cpp_out path. That's too complex for makefile.
I have discussed this before with Wink. I can forward you the previous discussion.

