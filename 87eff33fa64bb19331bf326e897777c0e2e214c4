Revision: 87eff33fa64bb19331bf326e897777c0e2e214c4
Patch-set: 1
File: core/config_sanitizers.mk

117
Mon Mar 14 16:17:36 2016 +0000
Author: Evgenii Stepanov <1005967@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 57bb093b_aeeefba5
Bytes: 94
Maybe compare directly with $($(LOCAL_2ND_ARCH_VAR_PREFIX)ADDRESS_SANITIZER_RUNTIME_LIBRARY) ?

117
Mon Mar 14 18:03:39 2016 +0000
Author: Chih-hung Hsieh <1052399@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 57bb093b_aeeefba5
UUID: 57bb093b_349a5a8b
Bytes: 217
Although $(ADDRESS_SANITIZER_CONFIG_EXTRA_SHARED_LIBRARIES) is empty now, I think it is safer to check it too here.
make complains about recursive dependency if $(my_shared_libraries) contains current $(LOCAL_MODULE).

117
Mon Mar 14 18:08:02 2016 +0000
Author: Evgenii Stepanov <1005967@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 57bb093b_349a5a8b
UUID: 57bb093b_f4f9f294
Bytes: 228
If it's empty in all configurations, it's better to just remove it. An explicit check against ...RUNTIME_LIBRARY is a lot less confusing, and you can also move the my_static_libraries line below (line 121) under this check, too.

117
Mon Mar 14 18:27:21 2016 +0000
Author: Chih-hung Hsieh <1052399@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 57bb093b_f4f9f294
UUID: 57bb093b_94586602
Bytes: 340
$(ADDRESS_SANITIZER_CONFIG_EXTRA_STATIC_LIBRARIES) is libasan, which we should check to avoid recursive dependency.
I guess ADDRESS_SANITIZER_CONFIG_EXTRA_SHARED_LIBRARIES  is there, although empty now, for the future in case we need something like libasan as shared library.
I think Dan added those two variables.
I will check it with him.

117
Mon Mar 14 18:38:08 2016 +0000
Author: Dan Albert <1043845@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 57bb093b_94586602
UUID: 57bb093b_14bf56f2
Bytes: 113
It used to contain libdl https://android-review.git.corp.google.com/#/c/155082/

Don't think we need it any more.

117
Mon Mar 14 18:43:20 2016 +0000
Author: Evgenii Stepanov <1005967@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 57bb093b_14bf56f2
UUID: 57bb093b_dfd04718
Bytes: 113
Hm, would not this thing apply to, say, libc, which asan library depends on, thus creating a circular dependency?

