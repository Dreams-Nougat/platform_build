Revision: 93694e63ee3d4fa3aec0d4246e25039414bca520
Patch-set: 1
File: target/board/generic_arm64/BoardConfig.mk

26:0-27:33
Wed Jun 04 16:39:16 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: bf505ca5_96b4fc0d
Bytes: 213
it seems strange these just don't agree with the TARGET_CPU above. Presumably we could build arm code (ie not 64-bit) with armv8 as a variant. There are instructions in armv8 beyond even what's in cortex-a15 iirc.

27
Wed Jun 04 17:11:27 2014 +0000
Author: Ying Wang <1003981@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: bf505ca5_96b4fc0d
UUID: 7f1c24fb_e3b820d9
Bytes: 88
We wanted to use the exactly same configuration of 32-bit arm build for the second arch.

27
Wed Jun 04 21:26:29 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 7f1c24fb_e3b820d9
UUID: 3f162cdd_52d754cb
Bytes: 249
What is "exactly same configuration" ? The variant here has neon while the normal BoardConfig.mk doesn't. As Aarch64 implies Arm64 implies armv8 then I think the right options are:
TARGET_2ND_ARCH_VARIANT := armv8-a
TARGET_2ND_CPU_VARIANT := armv8-a

27
Wed Jun 04 21:39:25 2014 +0000
Author: Ying Wang <1003981@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 3f162cdd_52d754cb
UUID: 7f1c24fb_8eb06b7a
Bytes: 238
The configurations in build/core/combo.
With armv8-a for the second arch, it won't bulid, for we don't have armv8-a.mk in build/core/combo/arch/arm/. Also I don't know if the 32-bit toolchain knows armv8-a as arch variant and cpu variant.

27
Wed Jun 04 22:07:11 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 7f1c24fb_8eb06b7a
UUID: df4350e0_10ef8dda
Bytes: 654
Our ARM 32-bit GCC supports armv8-a as a -march option:

$ arm-eabi-gcc-4.8 -march=armv8-a
arm-eabi-gcc-4.8: fatal error: no input files
compilation terminated.

it seems like we should add a armv8-a.mk in build/core/combo/arch/arm/, looking at:
https://gcc.gnu.org/onlinedocs/gcc-4.8.3/gcc/ARM-Options.html#ARM-Options
There are other options we can specify for potentially better neon support like:
-mfpu=neon-fp-armv8
I defer to Ben and ARM on the best default combination. It seems wrong that we're not treating 32-bit ARMv8 as an improved instruction set in this patch but making it look like a cortex-a15 (although that's better than just generic).

