Revision: 93694e63ee3d4fa3aec0d4246e25039414bca520
Patch-set: 1
File: target/board/generic_arm64/BoardConfig.mk

26:0-27:33
Wed Jun 04 16:39:16 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: bf505ca5_96b4fc0d
Bytes: 213
it seems strange these just don't agree with the TARGET_CPU above. Presumably we could build arm code (ie not 64-bit) with armv8 as a variant. There are instructions in armv8 beyond even what's in cortex-a15 iirc.

27
Wed Jun 04 17:11:27 2014 +0000
Author: Ying Wang <1003981@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: bf505ca5_96b4fc0d
UUID: 7f1c24fb_e3b820d9
Bytes: 88
We wanted to use the exactly same configuration of 32-bit arm build for the second arch.

27
Wed Jun 04 21:26:29 2014 +0000
Author: Ian Rogers <1010118@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 7f1c24fb_e3b820d9
UUID: 3f162cdd_52d754cb
Bytes: 249
What is "exactly same configuration" ? The variant here has neon while the normal BoardConfig.mk doesn't. As Aarch64 implies Arm64 implies armv8 then I think the right options are:
TARGET_2ND_ARCH_VARIANT := armv8-a
TARGET_2ND_CPU_VARIANT := armv8-a

