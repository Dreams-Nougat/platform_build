Revision: a2f6deb5f1ae5abd46430eabc025a0dbc70a9f65
Patch-set: 2
File: core/combo/TARGET_linux-arm.mk

167
Tue Sep 23 00:45:58 2014 +0000
Author: Ying Wang <1003981@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: b012530c_363b9604
Bytes: 77
You need the 	$(combo_2nd_arch_prefix) prefix, so it works in multilib build.

216
Tue Sep 23 00:45:58 2014 +0000
Author: Ying Wang <1003981@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: d01507f5_9a928d45
Bytes: 244
This won't work in multlib build.
You need to turn it into a target-specific variable (like the PRIVATE_TARGET_LIBATOMIC). Or can we merge PRIVATE_TARGET_LIBATOMIC, PRIVATE_TARGET_LIBGCOV and PRIVATE_TARGET_LIBGCC to a single PRIVATE_ variable?

216
Tue Sep 23 16:14:56 2014 +0000
Author: Dan Albert <1043845@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: d01507f5_9a928d45
UUID: 50b7574c_5062ac8f
Bytes: 432
Merging them into a PRIVATE_BUILTINS would be nice, but that's probably a job for another patch, since that also will require us being consistent with the order in which libgcc is added (currently different for platform builds and unbundled). I think unbundled actually does the better thing by adding libgcc before all of the dependent libraries (since that ensures that no binary ever expects to receive libgcc symbols from libc).

File: core/target_test_internal.mk

27
Mon Sep 22 23:11:21 2014 +0000
Author: Dan Albert <1043845@85c56323-6fa9-3386-8a01-6480fb634889>
UUID: 7021bb30_82a03b1a
Bytes: 162
Using a static library makes every test in the tree sensitive to libstdc++ being built with coverage information. Is there any downside to using a shared library?

27
Tue Sep 23 00:13:37 2014 +0000
Author: Ying Wang <1003981@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: 7021bb30_82a03b1a
UUID: b012530c_d69ce258
Bytes: 193
I remember this is a hack to fix bionic-unit-tests-static build, see https://b.corp.google.com/issue?id=13643367#ISSUE_HistoryHeader9 . Not sure if moving to libstdc++.so would break the build.

27
Tue Sep 23 00:16:56 2014 +0000
Author: Dan Albert <1043845@85c56323-6fa9-3386-8a01-6480fb634889>
Parent: b012530c_d69ce258
UUID: 7021bb30_e55b412e
Bytes: 120
Ah, okay. I think we no longer have this issue because libc has that symbol itself now, but I'm still re-verifying this.

